{"ast":null,"code":"var _jsxFileName = \"/Users/tanakamuchemwa/Desktop/review-roam/client/src/pages/Businesses.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Box, Container } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function BusinessesPage() {\n  _s();\n  const [businesses, setbusinesses] = useState([]);\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/businesses`).then(res => res.json()).then(resJson => setbusinesses(resJson));\n  }, []);\n\n  // flexFormat provides the formatting options for a \"flexbox\" layout that enables the album cards to\n  // be displayed side-by-side and wrap to the next line when the screen is too narrow. Flexboxes are\n  // incredibly powerful. You can learn more on MDN web docs linked below (or many other online resources)\n  // https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox\n  const flexFormat = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly'\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: flexFormat,\n    children: businesses.map(business => /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      m: 2,\n      style: {\n        background: 'white',\n        borderRadius: '16px',\n        border: '2px solid #000'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/business/${business.business_id}`,\n          children: business.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, business.business_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(BusinessesPage, \"FM0PS0WsO/QV8DepiEqLBF+5/qM=\");\n_c = BusinessesPage;\nvar _c;\n$RefreshReg$(_c, \"BusinessesPage\");","map":{"version":3,"names":["useEffect","useState","Box","Container","NavLink","jsxDEV","_jsxDEV","config","require","BusinessesPage","_s","businesses","setbusinesses","fetch","server_host","server_port","then","res","json","resJson","flexFormat","display","flexDirection","flexWrap","justifyContent","style","children","map","business","p","m","background","borderRadius","border","to","business_id","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanakamuchemwa/Desktop/review-roam/client/src/pages/Businesses.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Box, Container } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\nconst config = require('../config.json');\n\nexport default function BusinessesPage() {\n  const [businesses, setbusinesses] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/businesses`)\n      .then(res => res.json())\n      .then(resJson => setbusinesses(resJson));\n  }, []);\n\n  // flexFormat provides the formatting options for a \"flexbox\" layout that enables the album cards to\n  // be displayed side-by-side and wrap to the next line when the screen is too narrow. Flexboxes are\n  // incredibly powerful. You can learn more on MDN web docs linked below (or many other online resources)\n  // https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox\n  const flexFormat = { display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-evenly' };\n\n  return (\n    <Container style={flexFormat}>\n      {businesses.map((business) =>\n        <Box\n          key={business.business_id}\n          p={3}\n          m={2}\n          style={{ background: 'white', borderRadius: '16px', border: '2px solid #000' }}\n        >\n        <h4><NavLink to={`/business/${business.business_id}`}>{business.name}</NavLink></h4>\n        </Box>\n      )}\n    </Container>\n  );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,SAAS,QAAQ,eAAe;AAC9C,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAExC,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACda,KAAK,CAAE,UAASN,MAAM,CAACO,WAAY,IAAGP,MAAM,CAACQ,WAAY,aAAY,CAAC,CACnEC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAIP,aAAa,CAACO,OAAO,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA,MAAMC,UAAU,GAAG;IAAEC,OAAO,EAAE,MAAM;IAAEC,aAAa,EAAE,KAAK;IAAEC,QAAQ,EAAE,MAAM;IAAEC,cAAc,EAAE;EAAe,CAAC;EAE9G,oBACElB,OAAA,CAACH,SAAS;IAACsB,KAAK,EAAEL,UAAW;IAAAM,QAAA,EAC1Bf,UAAU,CAACgB,GAAG,CAAEC,QAAQ,iBACvBtB,OAAA,CAACJ,GAAG;MAEF2B,CAAC,EAAE,CAAE;MACLC,CAAC,EAAE,CAAE;MACLL,KAAK,EAAE;QAAEM,UAAU,EAAE,OAAO;QAAEC,YAAY,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAiB,CAAE;MAAAP,QAAA,eAEjFpB,OAAA;QAAAoB,QAAA,eAAIpB,OAAA,CAACF,OAAO;UAAC8B,EAAE,EAAG,aAAYN,QAAQ,CAACO,WAAY,EAAE;UAAAT,QAAA,EAAEE,QAAQ,CAACQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAW;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK,GAL7EZ,QAAQ,CAACO,WAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMrB;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAEhB;AAAC9B,EAAA,CA7BuBD,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}