{"ast":null,"code":"var _jsxFileName = \"/Users/selassieberhane/CIS-5500-FINAL-PROJECT/client/src/pages/Users.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Box, Container, Pagination } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport Navbar from '../components/NavBar';\nimport '../components/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function UsersPage() {\n  _s();\n  const pageSize = 40;\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(1);\n  const totalPages = Math.ceil(users.length / pageSize);\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/users`).then(res => res.json()).then(resJson => setUsers(resJson));\n  }, [page, pageSize]);\n  const bodyStyle = {\n    backgroundImage: `url('./glass.jpeg')`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center',\n    height: '100vh',\n    color: 'white',\n    margin: 0,\n    paddingTop: '60px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  const userCard = {\n    width: '45%',\n    height: '180px',\n    border: '1px solid lightgrey',\n    borderRadius: '10px',\n    margin: '10px',\n    padding: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    transition: 'all .2s ease-in-out'\n  };\n  const handleChangePage = (e, newPage) => {\n    // Can always go to previous page (TablePagination prevents negative pages)\n    // but only fetch next page if we haven't reached the end (currently have full page of data)\n    if (newPage < page && businesses.length === pageSize) {\n      // Note that we set newPage + 1 since we store as 1 indexed but the default pagination gives newPage as 0 indexed\n      setPage(newPage + 1);\n    }\n  };\n  const userCardHover = {\n    transform: 'scale(1.05)',\n    boxShadow: '2px 2px 10px lightgrey'\n  };\n  const flexFormat = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: bodyStyle,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        style: flexFormat,\n        children: users.slice((page - 1) * pageSize, page * pageSize).map(user => /*#__PURE__*/_jsxDEV(Box, {\n          style: userCard\n        }, user.user_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        count: totalPages,\n        page: page,\n        onChange: handlePageChange,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersPage, \"oYHLDlf6RZw/RsOQSxdFAE4A6eM=\");\n_c = UsersPage;\nvar _c;\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"names":["useEffect","useState","Box","Container","Pagination","NavLink","Navbar","jsxDEV","_jsxDEV","config","require","UsersPage","_s","pageSize","users","setUsers","page","setPage","totalPages","Math","ceil","length","fetch","server_host","server_port","then","res","json","resJson","bodyStyle","backgroundImage","backgroundSize","backgroundPosition","height","color","margin","paddingTop","display","flexDirection","justifyContent","alignItems","userCard","width","border","borderRadius","padding","transition","handleChangePage","e","newPage","businesses","userCardHover","transform","boxShadow","flexFormat","flexWrap","children","fileName","_jsxFileName","lineNumber","columnNumber","style","slice","map","user","user_id","count","onChange","handlePageChange","_c","$RefreshReg$"],"sources":["/Users/selassieberhane/CIS-5500-FINAL-PROJECT/client/src/pages/Users.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Box, Container, Pagination } from '@mui/material'\nimport { NavLink } from 'react-router-dom'\nimport Navbar from '../components/NavBar'\nimport '../components/styles.css'\n\nconst config = require('../config.json')\n\nexport default function UsersPage() {\n    const pageSize = 40\n    const [users, setUsers] = useState([])\n    const [page, setPage] = useState(1)\n    const totalPages = Math.ceil(users.length / pageSize)\n\n\n    useEffect(() => {\n        fetch(\n          `http://${config.server_host}:${config.server_port}/users`,\n        )\n          .then((res) => res.json())\n          .then((resJson) => setUsers(resJson))\n      }, [page, pageSize])\n\n\n\n    const bodyStyle = {\n        backgroundImage: `url('./glass.jpeg')`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center center',\n        height: '100vh',\n        color: 'white',\n        margin: 0,\n        paddingTop: '60px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }\n\n      const userCard = {\n        width: '45%',\n        height: '180px',\n        border: '1px solid lightgrey',\n        borderRadius: '10px',\n        margin: '10px',\n        padding: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        transition: 'all .2s ease-in-out',\n      }\n\n      const handleChangePage = (e, newPage) => {\n        // Can always go to previous page (TablePagination prevents negative pages)\n        // but only fetch next page if we haven't reached the end (currently have full page of data)\n        if (newPage < page && businesses.length === pageSize) {\n          // Note that we set newPage + 1 since we store as 1 indexed but the default pagination gives newPage as 0 indexed\n          setPage(newPage + 1)\n        }\n      }\n    \n      const userCardHover = {\n        transform: 'scale(1.05)',\n        boxShadow: '2px 2px 10px lightgrey',\n      }\n    \n      const flexFormat = {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n      }\n\n      return (\n        <div>\n          <Navbar/>\n          <Container style={bodyStyle}>\n                <Container style={flexFormat}>\n                    {users\n                        .slice((page - 1) * pageSize, page * pageSize)\n                        .map((user) => (\n                            <Box key={user.user_id} style={userCard}>\n                                {/* Display user information here */}\n                            </Box>\n                        ))}\n                </Container>\n                <Pagination\n                    count={totalPages}\n                    page={page}\n                    onChange={handlePageChange}\n                    color=\"primary\"\n                />\n            </Container>\n        </div>\n      );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}